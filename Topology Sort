#include <bits/stdc++.h> 
void dfs(int node,vector<int>adj[],vector<int>&vis,stack<int>&s)
{
    vis[node]=1;
    for(auto i:adj[node])
    {
        if(!vis[i])
        {
            dfs(i,adj,vis,s);
        }
    }
    s.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    stack<int>s;
    vector<int>ans;
    vector<int>vis(v,0);
    vector<int>adj[v];
    for(int i=0;i<edges.size();i++)
    {
        int u=edges[i][0];
        int v=edges[i][1];
        adj[u].push_back(v);
        
    } 
    for(int i=0;i<v;i++)
    {
        if(!vis[i])
        {
            dfs(i,adj,vis,s);
        }
    }
    while(!s.empty())
    {
        int top=s.top();
        ans.push_back(top);
        s.pop();

    }
    return ans;
}
