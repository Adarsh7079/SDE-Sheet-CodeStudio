LinkedListNode<int>* reverse(LinkedListNode<int>* head)
{
    if(head==NULL)
    {
        return head;
    }
    LinkedListNode<int>* prev=NULL;
    LinkedListNode<int>* curr=head;
    LinkedListNode<int>* forward=NULL;
    while(curr!=NULL)
    {
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
    }
    return prev;
}
bool isPalindrome(LinkedListNode<int> *head) {
    LinkedListNode<int> *slow=head;
    LinkedListNode<int> *fast=head;
    if(head==NULL)
    {
        return true;
    }
    while(fast->next!=NULL && fast->next->next!=NULL)
    {
        slow=slow->next;
        fast=fast->next->next;
    }
    LinkedListNode<int> *temp=head;
    LinkedListNode<int> *head2=reverse(slow->next);
    while(temp!=NULL && head2!=NULL)
    {
        if(temp->data!=head2->data)
        {
            return false;
        }
        temp=temp->next;
        head2=head2->next;
    }
    return true;

}
