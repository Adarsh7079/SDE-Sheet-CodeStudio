
vector<int> bottomView(BinaryTreeNode<int> * root){
    vector<int>ans;
    
    queue<pair<BinaryTreeNode<int>*,int>> q;
    q.push({root,0});
    if(root==NULL)
    {
        return {}; 
    }
    map<int,int>map;
    map[0]=root->data;
    while(!q.empty())
    {
        auto it=q.front();
        q.pop();
        int indx=it.second;
        BinaryTreeNode<int>* node=it.first;
      
        if(node->left)
        {
            q.push({node->left,indx-1});
            map[indx-1]=node->left->data;
        }
        if(node->right)
        {
          q.push({node->right, indx + 1});
          map[indx+1]=node->right->data;
        }
        
    }
    for(auto i:map)
    {
        ans.push_back(i.second);
    }
    return ans;
}
