#include <bits/stdc++.h>
void solve(int i,vector<int>arr,vector<vector<int>>&ans,vector<int>temp)
{
    if(i==arr.size())
    {
        ans.push_back(temp);
        return;
    }
    //take 
    temp.push_back(arr[i]);
    solve(i + 1, arr, ans, temp);
    temp.pop_back();

    while(i+1<arr.size() && arr[i]==arr[i+1])
    {
        i++;
    }
    solve(i+1,arr,ans,temp);
 
}
vector<vector<int>> uniqueSubsets(int n, vector<int> &arr)
{
   vector<vector<int>>ans;
   vector<int>temp;
   unordered_map<int,int>m;
   sort(arr.begin(),arr.end());
   solve(0,arr,ans,temp);
   sort(ans.begin(),ans.end());
   return ans;

}
