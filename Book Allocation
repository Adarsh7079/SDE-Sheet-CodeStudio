bool possible(int n, int m, vector<int> time, int mid) {
    int daycount = 1;
    int timesum = 0;
    for (int i = 0; i < m; i++) {
        if (timesum + time[i] <= mid) {
            timesum += time[i];
        }
        else {
            daycount++;
            timesum = time[i];
        }
        if (daycount > n || time[i] > mid) {
            return false;
        }
    }
    return true;
}
long long ayushGivesNinjatest(int n, int m, vector<int> time) 
{	
	int s = 0;
    int sum = 0;
    for (int i = 0; i < time.size(); i++) {
        sum += time[i];
    }
    int e = sum;
    long long  ans = -1;
    while (s <= e) {
		int mid = s + (e - s) / 2;
        if (possible(n, m, time, mid)) {
            ans = mid;
            e = mid - 1;
        }
        else {
          s = mid + 1;
        }
    }
    return ans;
}
